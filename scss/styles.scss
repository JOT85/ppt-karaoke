@charset 'utf-8';

@font-face {
  font-family: 'Comfortaa';
  src: url('fonts/Comfortaa-Bold.woff2') format('woff2'),
       url('fonts/Comfortaa-Bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Comfortaa';
  src: url('fonts/Comfortaa-Light.woff2') format('woff2'),
       url('fonts/Comfortaa-Light.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

$base-font: 'Comfortaa', sans-serif;
$main-colour: #ffff80;

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  height: 100%;
}

body {
  font-family: $base-font;
  height: 100%;
  font-size: calc(0.75em + 2vmin);
  text-align: center;
  margin: 0;
  padding: 0;
  background-color: $main-colour;
}

section {
  width: 100%;
  padding: 2em;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

img,
video {
  max-width: 100%;
}

h1 {
  font-size: 2em;
}

ol {
  width: max-content;
  text-align: left;
  line-height: 1.4;
  margin: 0 auto;
  list-style-type: lower-greek;
}

li {
  margin-bottom: 0.25em;
}

a {
  text-decoration: none;
  transition: transform 300ms;
  word-wrap: break-word;

  &:hover {
    text-decoration: underline;
    transform: scale(1.2);
  }
}

.o-content {
  width: 100%;
  max-height: 100vh;
  margin-bottom: 2rem;
}

.o-controls {
  display: none;
}

[class*='img'] {
  background-size: contain;
  background-repeat: no-repeat;
  background-color: black;
  background-position: center;
}

[class*='o-emoji'] {
  display: inline-block;
  vertical-align: middle;
  font-family: 'Apple Color Emoji', 'Segoe UI Emoji';
}

.o-emoji_large {
  font-size: calc(1.75em + 3vw);
}

span[role=img][aria-label],
span[role=img][aria-label] {
  position: relative;
}

span[role=img][aria-label]:focus::after,
span[role=img][aria-label]:hover::after {
  font-size: 1rem;
  font-family: $base-font;
  font-weight: 400;
  position: absolute;
  display: block;
  line-height: 1.2;
  content: attr(aria-label);
  z-index: 3;
  top: 100%;
  left: 0;
  background-color: $main-colour;
  padding: 0.25em;
  border: 1px solid #fff;
  box-shadow: 2px 2px 4px #000;
}

@media print {
  span[role=img][aria-label]::after {
    content: ' (' attr(aria-label) ') ';
  }
}

@media screen and (min-aspect-ratio: 1/1) {
  body {
    overflow: hidden;
  }
  
  section {
    height: 100%;
    padding: 1em;
    position: absolute;
  }

  .o-controls {
    font-size: 75%;
    flex: none;
    display: flex;
    justify-content: space-evenly;
    width: 40vw;
    margin: 0 auto;
  }

  // Make sections act like slides
  .start {
    display: block;
    z-index: 2;
  }

  [id^=slide]:target ~ #start {
    display: none;
  }
  
  [id^=slide] {
    transition: opacity 0.6s;
    opacity: 0; 
    z-index: 0;
  }

  [id^=slide]:target {
    opacity: 1;
    z-index: 2;
  }

  [id^=slide]:target ~ .slide {
    opacity: 0;
    z-index: 0;
  }
}

$charNum: 2;

.num_cont {
  font-size: 5em;
  font-family: monospace;
  width: 2ch;
  overflow: hidden;
  margin: 0 auto;
}

.num_animation {
  animation: randomGen (300 / $charNum / 15) + s steps(300 / $charNum) infinite;
}

.paused {
  animation-play-state: paused;
}

@keyframes randomGen {
  100% { transform: translateX(-300 / $charNum * 100%); }
}